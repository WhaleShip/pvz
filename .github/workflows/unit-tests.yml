name: unit-tests
on: [ push, pull_request ]
jobs:
  test:
    name: Test with Coverage
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [ 1.24.2 ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Install dependencies
      run: go mod download

    - name: Run unit tests
      run: |
        go test -race -covermode atomic -coverprofile=cov_unit.out $(go list ./... | grep -v '/internal/infrastructure')

    - name: Run integration tests
      run: |
        go test -v -tags=integration -covermode atomic -coverprofile=cov_integration.out ./tests/integration_test

    - name: Install gocovmerge
      run: |
        go install github.com/wadey/gocovmerge@latest
        echo "$GOPATH/bin" >> $GITHUB_PATH

    - name: Merge coverage profiles
      run: |
        gocovmerge cov_unit.out cov_integration.out > covprofile

    - name: Install goveralls
      run: go install github.com/mattn/goveralls@latest

    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: goveralls -coverprofile=covprofile -service=github
