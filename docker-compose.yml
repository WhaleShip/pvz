services:

  db:
    container_name: avito-postgres
    image: postgres:17
    restart: always
    env_file:
      - ./.env
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  pvz:
    container_name: avito-pvz
    build:
      context: .
      dockerfile: ./docker/Dockerfile.pvz
    env_file:
      - ./.env
    restart: always
    ports:
      - "8080:8080"
      - "9000:9000" 
      - "3000:3000" 

    depends_on:
      db:
        condition: service_healthy

  pgbouncer:
    container_name: avito-pgbouncer
    build:
      context: .
      dockerfile: docker/Dockerfile.pgbouncer
    restart: always
    env_file:
      - ./.env
    depends_on:
      - db

  prometheus:
    container_name: avito-prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  
  loki:
    container_name: avito-loki
    image: grafana/loki:latest
    restart: always
    profiles: ["logging"]
    ports:
      - "3100:3100"
    volumes:
      - ./grafana/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml


  promtail:
    container_name: avito-promtail
    image: grafana/promtail:latest
    restart: always
    profiles: ["logging"]
    depends_on:
      - loki
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - ./grafana/promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
    command: -config.file=/etc/promtail/promtail-config.yaml

  grafana:
    hostname: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true 
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - TZ=${SYSTEM_TIMEZONE:-Europe/Moscow}
    image: grafana/grafana:latest
    restart: always
    profiles: ["logging"]
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro